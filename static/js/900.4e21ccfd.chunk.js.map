{"version":3,"file":"static/js/900.4e21ccfd.chunk.js","mappings":"kNACA,EAA2B,uBAA3B,EAAgE,0BAAhE,EAAwG,0BAAxG,EAAiJ,2BAAjJ,EAAuL,uB,kBC2DvL,EAxDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,IATAE,EAAAA,EAAAA,YAAU,WACHF,IACLG,EAAAA,EAAAA,GAAUH,GACPI,MAAK,SAAAC,GAEJR,EAAQQ,EAAKT,KACd,IACAU,OAAM,SAAAR,GAAK,OAAIC,EAASD,EAAMS,QAAnB,GACf,GAAE,CAACP,KACCJ,EACH,OAAO,wCAOT,OACE,2BACGE,GAASU,MAAM,8BAChB,eAAIC,UAAWC,EAAf,SACGd,EAAKe,KAAI,SAAAC,GACR,OACE,2BACE,gBACEC,IACED,EAAKE,aAAL,UAbO,mCAaP,OACwBF,EAAKE,cAD7B,UAXd,+EAeYC,MAAO,IACPC,OAAQ,IACRC,IAAKL,EAAKM,QAGZ,iBAAKT,UAAWC,EAAhB,WACE,gBAAID,UAAWC,EAAf,UAAkCE,EAAKM,KAAvC,QACA,eAAGT,UAAWC,EAAd,wBAEE,mBACA,kBAAMD,UAAWC,EAAjB,cAAiCE,EAAKO,aAAkB,YAjBrDP,EAAKQ,GAsBjB,QAIR,C,sJC3DD,IAAMC,EAAU,CACdC,QAAS,CACPC,cACE,+NAIOC,EAAc,WAGzB,OAAOC,MAFK,kDAEMJ,GAASjB,MAAK,SAAAsB,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EAEYC,EAAoB,SAAAhC,GAC/B,IAAMiC,EAAG,6CAAyCjC,GAElD,OAAOyB,MAAMQ,EAAKZ,GAASjB,MAAK,SAAAsB,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EAEY5B,EAAY,SAAAH,GACvB,IAAMiC,EAAG,6CAAyCjC,EAAzC,YAET,OAAOyB,MAAMQ,EAAKZ,GAASjB,MAAK,SAAAsB,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EACYG,EAAe,SAAAlC,GAC1B,IAAMiC,EAAG,6CAAyCjC,EAAzC,YAET,OAAOyB,MAAMQ,EAAKZ,GAASjB,MAAK,SAAAsB,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EACYI,EAAoB,SAAAC,GAC/B,IAEMC,EAAG,UAFG,4CAEH,kBAAmBD,GAC5B,OAAOX,MAAMY,EAAKhB,GAASjB,MAAK,SAAAsB,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","servises/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"CastList\":\"Cast_CastList__2oQ+0\",\"textContent\":\"Cast_textContent__ynZTK\",\"CastContent\":\"Cast_CastContent__V2FyS\",\"castSubtitle\":\"Cast_castSubtitle__5Sj6E\",\"infoText\":\"Cast_infoText__opBek\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { fetchCast } from '../../servises/moviesApi';\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  // console.log('movieId', movieId);\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchCast(movieId)\n      .then(data => {\n        // console.log('data', data);\n        setCast(data.cast);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n  if (!cast) {\n    return <div>Loading...</div>;\n  }\n\n  const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w154';\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {error && alert('Not found any information')}\n      <ul className={css.CastList}>\n        {cast.map(item => {\n          return (\n            <li key={item.id}>\n              <img\n                src={\n                  item.profile_path\n                    ? `${BASE_IMAGE_URL}${item.profile_path}`\n                    : `${defaultImg}`\n                }\n                width={154}\n                height={231}\n                alt={item.name}\n              />\n\n              <div className={css.CastContent}>\n                <h3 className={css.castSubtitle}>{item.name} </h3>\n                <p className={css.textContent}>\n                  Character:\n                  <br />\n                  <span className={css.infoText}> {item.character}</span>{' '}\n                </p>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\nexport default Cast;\n","const options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTU3NDZiZDFhN2VhZDc4YjNiZmQ5MDRhZTAwMDRhNCIsInN1YiI6IjY1MGM2YWI2MmM2YjdiMDBjNGZkZmYzMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DX99mnnx3ecqx74al80fvW6EsnGicUU6ObIsdIfAqC4',\n  },\n};\n\nexport const fetchMovies = () => {\n  const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n\nexport const fetchCast = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\nexport const fetchReviews = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\nexport const fetchSearchMovies = query => {\n  const URL = 'https://api.themoviedb.org/3/search/movie';\n\n  const url = `${URL}?query=${query}`;\n  return fetch(url, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n"],"names":["useState","cast","setCast","error","setError","movieId","useParams","useEffect","fetchCast","then","data","catch","message","alert","className","css","map","item","src","profile_path","width","height","alt","name","character","id","options","headers","Authorization","fetchMovies","fetch","response","ok","json","Promise","reject","Error","fetchMovieDetails","URL","fetchReviews","fetchSearchMovies","query","url"],"sourceRoot":""}