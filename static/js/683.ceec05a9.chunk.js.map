{"version":3,"file":"static/js/683.ceec05a9.chunk.js","mappings":"0NACA,GAAgB,UAAY,yBAAyB,WAAa,0BAA0B,sBAAwB,qCAAqC,UAAY,yBAAyB,UAAY,yBAAyB,SAAW,wBAAwB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,SAAW,wBAAwB,cAAgB,6BAA6B,QAAU,wB,SCsGnc,EAjGqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,kBAAmBH,GAC/B,OAA0BI,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACV,EAASW,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC3DV,QAAQC,IAAIH,GACZE,QAAQC,IAAI,sBAAuBM,GAEnC,IAAMI,GAAoBC,EAAAA,EAAAA,cAAY,WACpC,IAAMC,EAAG,6CAAyCjB,GAOlD,OAAOkB,MAAMD,EANG,CACdE,QAAS,CACPC,cACE,gOAGqBC,MAAK,SAAAC,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,GAAE,CAAC3B,IAUJ,IARA4B,EAAAA,EAAAA,YAAU,WACH5B,GACLe,IACGM,MAAK,SAAAQ,GACJrB,EAASqB,EACV,IACAC,OAAM,SAAArB,GAAK,OAAIC,EAASD,EAAMsB,QAAnB,GACf,GAAE,CAAChB,EAAmBf,IAClBO,EAAL,CAIA,IACMyB,EAAczB,EAAM0B,aAEpBC,EADU,IAAIC,KAAKH,GACJI,cACfC,EAAYC,KAAKC,MAAOhC,EAAMiC,aAAe,GAAM,KAEzD,OACE,iCACE,iBAAKC,UAAWC,EAAAA,UAAhB,UACGjC,GAASkC,MAAM,wBAEhB,iBAAKF,UAAWC,EAAAA,cAAhB,WACE,UAAC,KAAD,CAAME,GAAIjC,EAAoBkC,QAASJ,UAAWC,EAAAA,SAAlD,UACG,MADH,eAIA,gBACEI,IAAG,UAjBU,mCAiBV,OAAsBvC,EAAMwC,aAC/BC,IAAKzC,EAAM0C,qBAGf,iBAAKR,UAAWC,EAAAA,QAAhB,WACE,gBAAID,UAAWC,EAAAA,UAAf,UACGnC,EAAM0C,eADT,IAC0Bf,EAD1B,QAGA,eAAGO,UAAWC,EAAAA,UAAd,yBAA0CL,EAA1C,SACA,eAAII,UAAWC,EAAAA,SAAf,uBACA,cAAGD,UAAWC,EAAAA,KAAd,SAAyBnC,EAAM2C,YAC/B,eAAIT,UAAWC,EAAAA,SAAf,qBACA,eAAID,UAAWC,EAAAA,WAAf,SACGnC,EAAM4C,OAAOC,KAAI,SAAAC,GAAK,OACrB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADM,aAM7B,iBAAKd,UAAWC,EAAAA,sBAAhB,WACE,eAAID,UAAWC,EAAAA,UAAf,qCACA,gBAAID,UAAWC,EAAAA,SAAf,WACE,yBACE,SAAC,KAAD,CAAME,GAAG,OAAOH,UAAWC,EAAAA,SAA3B,qBAIF,yBACE,SAAC,KAAD,CAAME,GAAG,UAAUH,UAAWC,EAAAA,SAA9B,8BAMN,SAAC,EAAAc,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAtDL,CA0DF,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/Movie.module.css?db58","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movie_container__m8jFk\",\"genresList\":\"Movie_genresList__nBHhu\",\"additionalInfoWrapper\":\"Movie_additionalInfoWrapper__9nt59\",\"mainTitle\":\"Movie_mainTitle__0xJmp\",\"textScore\":\"Movie_textScore__kN-g5\",\"subtitle\":\"Movie_subtitle__NVEr9\",\"text\":\"Movie_text__Xcb+6\",\"InfoList\":\"Movie_InfoList__JQeNw\",\"Infotitle\":\"Movie_Infotitle__fdhwb\",\"backLink\":\"Movie_backLink__XPEkL\",\"imageWrrapper\":\"Movie_imageWrrapper__n64YU\",\"content\":\"Movie_content__RsC68\"};","import { Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useRef } from 'react';\n\nimport css from './Movie.module.css';\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  console.log('locationDetails', location);\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n\n  const backLinLocationkRef = useRef(location.state?.from ?? '/');\n  console.log(location);\n  console.log('backLinLocationkRef', backLinLocationkRef);\n\n  const fetchMovieDetails = useCallback(() => {\n    const URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n    const options = {\n      headers: {\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTU3NDZiZDFhN2VhZDc4YjNiZmQ5MDRhZTAwMDRhNCIsInN1YiI6IjY1MGM2YWI2MmM2YjdiMDBjNGZkZmYzMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DX99mnnx3ecqx74al80fvW6EsnGicUU6ObIsdIfAqC4',\n      },\n    };\n    return fetch(URL, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Not found movies'));\n    });\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchMovieDetails()\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(error => setError(error.message));\n  }, [fetchMovieDetails, movieId]);\n  if (!movie) {\n    return;\n  }\n\n  const BASE_IMAGE_URL = 'https://image.tmdb.org/t/p/w342';\n  const releaseDate = movie.release_date;\n  const dateObj = new Date(releaseDate);\n  const year = dateObj.getFullYear();\n  const userScore = Math.round((movie.vote_average / 10) * 100);\n\n  return (\n    <>\n      <div className={css.container}>\n        {error && alert('Not found any movie')}\n\n        <div className={css.imageWrrapper}>\n          <Link to={backLinLocationkRef.current} className={css.backLink}>\n            {'<--'} Go back\n          </Link>\n\n          <img\n            src={`${BASE_IMAGE_URL}${movie.poster_path}`}\n            alt={movie.original_title}\n          />\n        </div>\n        <div className={css.content}>\n          <h1 className={css.mainTitle}>\n            {movie.original_title}({year})\n          </h1>\n          <p className={css.textScore}>User score: {userScore} %</p>\n          <h3 className={css.subtitle}>Overview</h3>\n          <p className={css.text}>{movie.overview}</p>\n          <h3 className={css.subtitle}>Genres</h3>\n          <ul className={css.genresList}>\n            {movie.genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className={css.additionalInfoWrapper}>\n        <h3 className={css.Infotitle}>Additional information</h3>\n        <ul className={css.InfoList}>\n          <li>\n            <Link to=\"cast\" className={css.InfoLink}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" className={css.InfoLink}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["movieId","useParams","location","useLocation","console","log","useState","movie","setMovie","error","setError","backLinLocationkRef","useRef","state","from","fetchMovieDetails","useCallback","URL","fetch","headers","Authorization","then","response","ok","json","Promise","reject","Error","useEffect","data","catch","message","releaseDate","release_date","year","Date","getFullYear","userScore","Math","round","vote_average","className","css","alert","to","current","src","poster_path","alt","original_title","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}