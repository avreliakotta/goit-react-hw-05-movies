{"version":3,"file":"static/js/618.15f666f7.chunk.js","mappings":"kNACA,EAA8B,6BAA9B,EAA4E,gC,SCsD5E,EAnDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAeC,EAAAA,EAAAA,cAAY,WAC/B,IAAMC,EAAG,6CAAyCJ,EAAzC,YAQT,OAAOK,MAAMD,EANG,CACdE,QAAS,CACPC,cACE,gOAGqBC,MAAK,SAAAC,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,GAAE,CAACd,IAWJ,OATAe,EAAAA,EAAAA,YAAU,WACHf,GACLE,IACGM,MAAK,SAAAQ,GACJnB,EAAWmB,EAAKC,QACjB,IACAC,OAAM,SAAApB,GAAK,OAAIC,EAASD,EAAMqB,QAAnB,GACf,GAAE,CAACjB,EAAcF,KAGhB,gCACGF,GAASsB,MAAM,0BAChB,eAAIC,UAAWC,EAAf,SACG1B,GAAWA,EAAQ2B,OAAS,EAC3B3B,EAAQ4B,KAAI,SAAAC,GACV,OACE,2BACE,gBAAIJ,UAAWC,EAAf,qBAA4CG,EAAKC,WACjD,uBAAID,EAAKE,YAFFF,EAAKG,GAKjB,KAED,yEAKT,C","sources":["webpack://react-homework-template/./src/components/Reviews/Revievs.module.css?056f","components/Reviews/Reviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Revievs_reviewsList__FRRrv\",\"ReviewSubtitle\":\"Revievs_ReviewSubtitle__iQX0g\"};","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Revievs.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const fetchReviews = useCallback(() => {\n    const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n\n    const options = {\n      headers: {\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTU3NDZiZDFhN2VhZDc4YjNiZmQ5MDRhZTAwMDRhNCIsInN1YiI6IjY1MGM2YWI2MmM2YjdiMDBjNGZkZmYzMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DX99mnnx3ecqx74al80fvW6EsnGicUU6ObIsdIfAqC4',\n      },\n    };\n    return fetch(URL, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Not found movies'));\n    });\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchReviews()\n      .then(data => {\n        setReviews(data.results);\n      })\n      .catch(error => setError(error.message));\n  }, [fetchReviews, movieId]);\n\n  return (\n    <>\n      {error && alert('Not found any reviews')}\n      <ul className={css.reviewsList}>\n        {reviews && reviews.length > 0 ? (\n          reviews.map(item => {\n            return (\n              <li key={item.id}>\n                <h3 className={css.ReviewSubtitle}>Author: {item.author}</h3>\n                <p>{item.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <li>We don't have any reviews for this movie</li>\n        )}\n      </ul>\n    </>\n  );\n};\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","fetchReviews","useCallback","URL","fetch","headers","Authorization","then","response","ok","json","Promise","reject","Error","useEffect","data","results","catch","message","alert","className","css","length","map","item","author","content","id"],"sourceRoot":""}