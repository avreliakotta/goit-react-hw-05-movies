{"version":3,"file":"static/js/290.644e459c.chunk.js","mappings":"oMACaA,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,UAAKH,EAAQ,UAAMA,EAAN,KAAoB,IAAjC,OAAsCD,EAAMK,IAC9CC,MAAO,CAAEC,KAAML,GAFjB,SAIGF,EAAMQ,SAId,C,kGCZD,EAA4B,wBAA5B,EAAmE,2B,kBC+BnE,EA5Ba,WACX,OAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAkBM,EAAKC,QACxB,IACAC,OAAM,SAAAP,GACLC,EAASD,EAAMQ,QAChB,GACJ,GAAE,KAED,iCACE,eAAIC,UAAWC,EAAf,4BACCV,IAAS,mDACV,eAAIS,UAAWC,EAAf,SACGZ,GACCA,EAAea,KAAI,SAAAvB,GACjB,OACE,SAACD,EAAA,EAAD,CAA2BC,MAAOA,EAAOC,SAAS,UAAjCD,EAAMK,GAE1B,QAIV,C,sJC/BD,IAAMmB,EAAU,CACdC,QAAS,CACPC,cACE,+NAIOX,EAAc,WAGzB,OAAOY,MAFK,kDAEMH,GAASR,MAAK,SAAAY,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EAEYC,EAAoB,SAAAC,GAC/B,IAAMC,EAAG,6CAAyCD,GAElD,OAAOR,MAAMS,EAAKZ,GAASR,MAAK,SAAAY,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EAEYI,EAAY,SAAAF,GACvB,IAAMC,EAAG,6CAAyCD,EAAzC,YAET,OAAOR,MAAMS,EAAKZ,GAASR,MAAK,SAAAY,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EACYK,EAAe,SAAAH,GAC1B,IAAMC,EAAG,6CAAyCD,EAAzC,YAET,OAAOR,MAAMS,EAAKZ,GAASR,MAAK,SAAAY,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,EACYM,EAAoB,SAAAC,GAC/B,IAEMC,EAAG,UAFG,4CAEH,kBAAmBD,GAC5B,OAAOb,MAAMc,EAAKjB,GAASR,MAAK,SAAAY,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,C","sources":["components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.js","servises/moviesApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nexport const MoviesList = ({ movie, basePath }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link\n        to={`${basePath ? `${basePath}/` : ''}${movie.id}`}\n        state={{ from: location }}\n      >\n        {movie.title}\n      </Link>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"homeTitle\":\"Home_homeTitle__duF7K\",\"trendingList\":\"Home_trendingList__9nInU\"};","import { useState, useEffect } from 'react';\nimport { fetchMovies } from '../../servises/moviesApi';\nimport css from './Home.module.css';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchMovies()\n      .then(data => {\n        setTrendingMovies(data.results);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, []);\n  return (\n    <>\n      <h1 className={css.homeTitle}>Trending today</h1>\n      {error && <div>Not found any movies</div>}\n      <ul className={css.trendingList}>\n        {trendingMovies &&\n          trendingMovies.map(movie => {\n            return (\n              <MoviesList key={movie.id} movie={movie} basePath=\"movies\" />\n            );\n          })}\n      </ul>\n    </>\n  );\n};\nexport default Home;\n","const options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTU3NDZiZDFhN2VhZDc4YjNiZmQ5MDRhZTAwMDRhNCIsInN1YiI6IjY1MGM2YWI2MmM2YjdiMDBjNGZkZmYzMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DX99mnnx3ecqx74al80fvW6EsnGicUU6ObIsdIfAqC4',\n  },\n};\n\nexport const fetchMovies = () => {\n  const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n\nexport const fetchCast = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\nexport const fetchReviews = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\nexport const fetchSearchMovies = query => {\n  const URL = 'https://api.themoviedb.org/3/search/movie';\n\n  const url = `${URL}?query=${query}`;\n  return fetch(url, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n"],"names":["MoviesList","movie","basePath","location","useLocation","to","id","state","from","title","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","fetchMovies","then","data","results","catch","message","className","css","map","options","headers","Authorization","fetch","response","ok","json","Promise","reject","Error","fetchMovieDetails","movieId","URL","fetchCast","fetchReviews","fetchSearchMovies","query","url"],"sourceRoot":""}