{"version":3,"file":"static/js/925.1faadc8f.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","servises/moviesApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nexport const MoviesList = ({ movie, basePath }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link\n        to={`${basePath ? `${basePath}/` : ''}${movie.id}`}\n        state={{ from: location }}\n      >\n        {movie.title}\n      </Link>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchInput\":\"SearchForm_searchInput__h6REp\",\"FormSearch\":\"SearchForm_FormSearch__SeTUa\",\"searchButton\":\"SearchForm_searchButton__AQHxA\"};","import { useState } from 'react';\nimport css from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.FormSearch}>\n      <input\n        type=\"text\"\n        onChange={e => setQuery(e.target.value)}\n        value={query}\n        className={css.searchInput}\n      />\n      <button type=\"submit\" className={css.searchButton}>\n        Search\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"visibleList\":\"Movies_visibleList__S9dDQ\"};","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport css from './Movies.module.css';\nimport { fetchSearchMovies } from '../../servises/moviesApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query' ?? '');\n\n  useEffect(() => {\n    query &&\n      fetchSearchMovies(query)\n        .then(data => {\n          setSearchMovies(data.results);\n        })\n        .catch(error => console.log(error.message));\n  }, [query]);\n\n  const visibleMovies =\n    searchMovies &&\n    searchMovies.filter(\n      movie => movie && movie.title.toLowerCase().includes(query.toLowerCase())\n    );\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n\n      <ul className={css.visibleList}>\n        {visibleMovies &&\n          visibleMovies.map(movie => (\n            <MoviesList key={movie.id} movie={movie} basePath=\"\" />\n          ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","const options = {\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTU3NDZiZDFhN2VhZDc4YjNiZmQ5MDRhZTAwMDRhNCIsInN1YiI6IjY1MGM2YWI2MmM2YjdiMDBjNGZkZmYzMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DX99mnnx3ecqx74al80fvW6EsnGicUU6ObIsdIfAqC4',\n  },\n};\n\nexport const fetchMovies = () => {\n  const URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n\nexport const fetchMovieDetails = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n\nexport const fetchCast = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\nexport const fetchReviews = movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n\n  return fetch(URL, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\nexport const fetchSearchMovies = query => {\n  const URL = 'https://api.themoviedb.org/3/search/movie';\n\n  const url = `${URL}?query=${query}`;\n  return fetch(url, options).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error('Not found movies'));\n  });\n};\n"],"names":["MoviesList","movie","basePath","location","useLocation","to","id","state","from","title","SearchForm","onSubmit","useState","query","setQuery","event","preventDefault","className","css","type","onChange","e","target","value","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovies","then","data","results","catch","error","console","log","message","visibleMovies","filter","toLowerCase","includes","map","options","headers","Authorization","fetchMovies","fetch","response","ok","json","Promise","reject","Error","fetchMovieDetails","movieId","URL","fetchCast","fetchReviews","url"],"sourceRoot":""}