{"version":3,"file":"static/js/925.8ec1bf5a.chunk.js","mappings":"0NACA,EAA8B,gCAA9B,EAA2E,+BAA3E,EAAyH,iC,SCoC5GA,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,OACE,kBAAMH,SANa,SAAAI,GACnBA,EAAMC,iBACNL,EAASE,EACV,EAG+BI,UAAWC,EAAzC,WACE,kBACEC,KAAK,OACLC,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOC,MAAtB,EACXA,MAAOV,EACPI,UAAWC,KAEb,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,sBAKL,ECzDD,EAA8B,4BCyE9B,EArEe,WAAO,IAAD,EACnB,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOY,EAAP,KAAqBC,EAArB,KAGA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAGXjB,EAAQc,EAAaI,IAAb,UAAiB,SAAjB,EAA4B,IACpCC,GAAMC,EAAAA,EAAAA,QAAOpB,GAEbqB,GAAoBC,EAAAA,EAAAA,cAAY,WACpC,IAOMC,EAAG,UAPG,4CAOH,kBAAmBvB,GAC5B,OAAOwB,MAAMD,EAPG,CACdE,QAAS,CACPC,cACE,gOAIqBC,MAAK,SAAAC,GAC9B,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,oBACjC,GACF,GAAE,CAACjC,KAEJkC,EAAAA,EAAAA,YAAU,WACRf,EAAIgB,SACFd,EAAkBF,EAAIgB,SACnBR,MAAK,SAAAS,GACJC,QAAQC,IAAI,OAAQF,GACpBxB,EAAgBwB,EAAKG,QACtB,IACAC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,EAAMC,QAAtB,GACjB,GAAE,CAACrB,IAEJ,IAAMsB,EACJhC,GACAA,EAAaiC,QAAO,SAAAC,GAAK,OACvBA,EAAMC,MAAMC,cAAcC,SAAShD,EAAM+C,cADlB,IAS3B,OACE,iCACE,SAAClD,EAAD,CAAYC,SAPK,SAAAY,GAEnBK,EAAgB,CAAEf,MAAOU,GAC1B,KAMG,eAAIN,UAAWC,EAAf,SACGsC,GACCA,EAAcM,KAAI,SAAAJ,GAAK,OACrB,yBACE,SAAC,KAAD,CAAMK,GAAE,UAAKL,EAAMM,IAAMC,MAAO,CAAEC,KAAMrC,GAAxC,SACG6B,EAAMC,SAFFD,EAAMM,GADM,QAWhC,C","sources":["webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchInput\":\"SearchForm_searchInput__h6REp\",\"FormSearch\":\"SearchForm_FormSearch__SeTUa\",\"searchButton\":\"SearchForm_searchButton__AQHxA\"};","// import { useSearchParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport css from './SearchForm.module.css';\n// export const SearchForm = ({ onSubmit }) => {\n//   const [searchParams, setSearchParams] = useSearchParams();\n\n//   const query = searchParams.get('query' ?? '');\n\n//   const handleSubmit = event => {\n//     event.preventDefault();\n//     onSubmit(query);\n//   };\n//   const handleChange = event => {\n//     const value = event.target.value;\n//     if (value === '') {\n//       setSearchParams({});\n//     }\n//     setSearchParams({ query: value });\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className={css.FormSearch}>\n//       <input\n//         type=\"text\"\n//         onChange={handleChange}\n//         value={query || ''}\n//         className={css.searchInput}\n//       />\n//       <button type=\"submit\" className={css.searchButton}>\n//         Search\n//       </button>\n//     </form>\n//   );\n// };\n// import { useState } from 'react';\n// import css from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.FormSearch}>\n      <input\n        type=\"text\"\n        onChange={e => setQuery(e.target.value)}\n        value={query}\n        className={css.searchInput}\n      />\n      <button type=\"submit\" className={css.searchButton}>\n        Search\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"visibleList\":\"Movies_visibleList__S9dDQ\"};","import { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  // const [submitted, setSubmitted] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  // console.log('moviesLocation', location);\n\n  const query = searchParams.get('query' ?? '');\n  const ref = useRef(query);\n\n  const fetchSearchMovies = useCallback(() => {\n    const URL = 'https://api.themoviedb.org/3/search/movie';\n    const options = {\n      headers: {\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNTU3NDZiZDFhN2VhZDc4YjNiZmQ5MDRhZTAwMDRhNCIsInN1YiI6IjY1MGM2YWI2MmM2YjdiMDBjNGZkZmYzMyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DX99mnnx3ecqx74al80fvW6EsnGicUU6ObIsdIfAqC4',\n      },\n    };\n    const url = `${URL}?query=${query}`;\n    return fetch(url, options).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return Promise.reject(new Error('Not found movies'));\n    });\n  }, [query]);\n\n  useEffect(() => {\n    ref.current &&\n      fetchSearchMovies(ref.current)\n        .then(data => {\n          console.log('data', data);\n          setSearchMovies(data.results);\n        })\n        .catch(error => console.log(error.message));\n  }, [fetchSearchMovies]);\n\n  const visibleMovies =\n    searchMovies &&\n    searchMovies.filter(movie =>\n      movie.title.toLowerCase().includes(query.toLowerCase())\n    );\n\n  const handleSubmit = value => {\n    // setSubmitted(true);\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n      {/* {submitted && ( */}\n      <ul className={css.visibleList}>\n        {visibleMovies &&\n          visibleMovies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n      </ul>\n      {/* )} */}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchForm","onSubmit","useState","query","setQuery","event","preventDefault","className","css","type","onChange","e","target","value","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","get","ref","useRef","fetchSearchMovies","useCallback","url","fetch","headers","Authorization","then","response","ok","json","Promise","reject","Error","useEffect","current","data","console","log","results","catch","error","message","visibleMovies","filter","movie","title","toLowerCase","includes","map","to","id","state","from"],"sourceRoot":""}